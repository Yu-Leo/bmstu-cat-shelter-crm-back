name: Go

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: make build

  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        
    - name: Gotools Cache
      uses: actions/cache@v2
      id: cache-gotools
      with:
        path: ~/go/bin
        key: ${{ runner.os }}-go-${{ hashFiles('**/Makefile') }}
        restore-keys: ${{ runner.os }}-go-
          
    - name: Install tools
      if: steps.cache-gotools.outputs.cache-hit != 'true'
      run: make gotools

    - name: Gen mocks
      run: make mocks

    - name: Lint
      run: make lint
        
  unit-tests:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install tools
      run: make gotools

    - name: Gen mocks
      run: make mocks

    - name: Unit tests
      run: make test
        
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Init database
      run: make init-db
 
    - name: Run e2e-tests
      run: docker compose -f docker-compose.ci.yaml up --build ci-e2e-tests-client --exit-code-from ci-e2e-tests-client
        
    - name: Stop and remove Docker containers
      if: always()
      run: docker compose -f docker-compose.ci.yaml down
